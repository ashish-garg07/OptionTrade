# Unique name for this workflow
name: Deploy Package using Scratch Org

# Definition when the workflow should run
on:
    workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
        tags:
          description: 'Test scenario tags' 

# Jobs to be executed
jobs:
    create-package:
        runs-on: ubuntu-latest
        steps:
            # Install Salesforce CLI
            - name: Install Salesforce CLI
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
                  mkdir sfdx-cli
                  tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
                  ./sfdx-cli/install
            # Checkout the code in the pull request
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: 'echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt'

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: 'sfdx auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d --setalias HubOrg'

            # Create Scratch Org
            - name: 'Create Scratch Org'  
              run: 'sfdx force:org:create --targetdevhubusername HubOrg --setdefaultusername --definitionfile config/project-scratch-def.json --setalias ciorg --wait 10 --durationdays 1'

            # Push source to scratch org
            - name: 'Push source to scratch org'
              run: 'sfdx force:source:push --targetusername ciorg'

            # Run unit tests in scratch org 
            - name: 'Run unit tests in scratch org'
              run: 'sfdx force:apex:test:run --targetusername ciorg --wait 10 --resultformat tap --codecoverage --testlevel RunLocalTests'


            # Delete scratch org
            - name: 'Delete scratch org'
              run: 'sfdx force:org:delete --targetusername ciorg --noprompt'

            # Create package 
            - name: 'Create Package'
              run: echo '::set-output name=PACKAGE_NAME::$(sfdx force:package:create -n option-basic -t Unlocked -r force-app -e)'
              id: create-package-name
              
             # Print Package Name
            - name: 'Print Package Name'
              run: 'echo Package Name= ${{ steps.create-package-name.outputs.PACKAGE_NAME }}'

            # Create package version   
            - name: 'Create package version'
              run: echo '::set-output name=PACKAGE_VERSION::$(sfdx force:package:version:create --package steps.create-package-name.outputs.PACKAGE_NAME --installationkeybypass --wait 10 --json --targetdevhubusername HubOrg | jq '.result.SubscriberPackageVersionId' | tr -d)'


            # Create scratch org
            - name: 'Create scratch org'
              run: 'sfdx force:org:create --targetdevhubusername HubOrg --setdefaultusername --definitionfile config/project-scratch-def.json --setalias installorg --wait 10 --durationdays 1'
  

            # Install package in scratch org
            - name: 'Install package in scratch org'
              run: 'sfdx force:package:install --package steps.create-package-name.outputs.PACKAGE_VERSION --wait 10 --targetusername installorg'

            # Run unit tests in scratch org
            - name: 'Run unit tests in scratch org'
              run: 'sfdx force:apex:test:run --targetusername installorg --wait 10 --resultformat tap --codecoverage --testlevel $TESTLEVEL'

            # Delete scratch org
            - name: 'Delete scratch org'
              run: 'sfdx force:org:delete --targetusername installorg --noprompt'